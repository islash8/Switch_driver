Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o (exit)
/usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
                              ./DIO_Prog.o (__do_copy_data)
/usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
                              ./SSD_Prog.o (__do_clear_bss)
/usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_umulhisi3.o)
                              ./Lib_Delay.o (__umulhisi3)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o
LOAD ./DIO_Prog.o
LOAD ./Lib_Delay.o
LOAD ./SSD_Prog.o
LOAD ./SWI_Prog.o
LOAD ./main.o
START GROUP
LOAD /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libatmega32.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                0x0000000000000400                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xf70
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x0000000000000054                . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000054                __ctors_start = .
 *(.ctors)
                0x0000000000000054                __ctors_end = .
                0x0000000000000054                __dtors_start = .
 *(.dtors)
                0x0000000000000054                __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000054        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000054        0xc /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000060       0x16 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000060                __do_copy_data
 .init4         0x0000000000000076       0x10 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000086        0x8 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o
 *(.init9)
 *(.text)
 .text          0x000000000000008e        0x4 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o
                0x000000000000008e                __vector_1
                0x000000000000008e                __vector_12
                0x000000000000008e                __bad_interrupt
                0x000000000000008e                __vector_6
                0x000000000000008e                __vector_3
                0x000000000000008e                __vector_11
                0x000000000000008e                __vector_13
                0x000000000000008e                __vector_17
                0x000000000000008e                __vector_19
                0x000000000000008e                __vector_7
                0x000000000000008e                __vector_5
                0x000000000000008e                __vector_4
                0x000000000000008e                __vector_9
                0x000000000000008e                __vector_2
                0x000000000000008e                __vector_15
                0x000000000000008e                __vector_8
                0x000000000000008e                __vector_14
                0x000000000000008e                __vector_10
                0x000000000000008e                __vector_16
                0x000000000000008e                __vector_18
                0x000000000000008e                __vector_20
 .text          0x0000000000000092        0x0 ./DIO_Prog.o
 .text          0x0000000000000092        0x0 ./Lib_Delay.o
 .text          0x0000000000000092        0x0 ./SSD_Prog.o
 .text          0x0000000000000092        0x0 ./SWI_Prog.o
 .text          0x0000000000000092        0x0 ./main.o
 .text          0x0000000000000092        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000092        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000092        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000092        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_umulhisi3.o)
                0x0000000000000092                . = ALIGN (0x2)
 *(.text.*)
 .text.DIO_vInit
                0x0000000000000092       0x74 ./DIO_Prog.o
                0x0000000000000092                DIO_vInit
 .text.DIO_u8SetPinDirection
                0x0000000000000106      0x1e8 ./DIO_Prog.o
                0x0000000000000106                DIO_u8SetPinDirection
 .text.DIO_u8SetPinValue
                0x00000000000002ee      0x1e6 ./DIO_Prog.o
                0x00000000000002ee                DIO_u8SetPinValue
 .text.DIO_u8ReadPinValue
                0x00000000000004d4      0x100 ./DIO_Prog.o
                0x00000000000004d4                DIO_u8ReadPinValue
 .text.DIO_u8SetPortDirection
                0x00000000000005d4       0xde ./DIO_Prog.o
                0x00000000000005d4                DIO_u8SetPortDirection
 .text.DIO_u8SetPortValue
                0x00000000000006b2      0x130 ./DIO_Prog.o
                0x00000000000006b2                DIO_u8SetPortValue
 .text.DIO_u8ReadPortValue
                0x00000000000007e2       0x9a ./DIO_Prog.o
                0x00000000000007e2                DIO_u8ReadPortValue
 .text.Lib_vDelayMs
                0x000000000000087c       0xa2 ./Lib_Delay.o
                0x000000000000087c                Lib_vDelayMs
 .text.Lib_vDelayUs
                0x000000000000091e       0x56 ./Lib_Delay.o
                0x000000000000091e                Lib_vDelayUs
 .text.SSD_u8SetValue
                0x0000000000000974      0x182 ./SSD_Prog.o
                0x0000000000000974                SSD_u8SetValue
 .text.SSD_u8SetOn
                0x0000000000000af6      0x2a0 ./SSD_Prog.o
                0x0000000000000af6                SSD_u8SetOn
 .text.SSD_u8SetOff
                0x0000000000000d96       0x68 ./SSD_Prog.o
                0x0000000000000d96                SSD_u8SetOff
 .text.SWI_u8GetSwitch
                0x0000000000000dfe       0xaa ./SWI_Prog.o
                0x0000000000000dfe                SWI_u8GetSwitch
 .text.main     0x0000000000000ea8       0xa6 ./main.o
                0x0000000000000ea8                main
 .text.libgcc.mul
                0x0000000000000f4e        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000f4e        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000f4e        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000f4e        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000f4e        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000f4e        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000f4e        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000f4e        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000f4e        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000f4e        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000f4e        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000f4e        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000f4e        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000f4e        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000f4e        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000f4e        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000f4e        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000f4e        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000f4e        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000f4e        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000f4e        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000f4e       0x1e /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_umulhisi3.o)
                0x0000000000000f4e                __umulhisi3
 .text.libgcc.div
                0x0000000000000f6c        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x0000000000000f6c        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x0000000000000f6c        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x0000000000000f6c        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x0000000000000f6c        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.fixed
                0x0000000000000f6c        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_umulhisi3.o)
                0x0000000000000f6c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000f6c        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
                0x0000000000000f6c                exit
                0x0000000000000f6c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000f6c        0x4 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x0000000000000f70                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x0000000000000f70                _etext = .

.data           0x0000000000800060       0xb0 load address 0x0000000000000f70
                0x0000000000800060                PROVIDE (__data_start = .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o
 .data          0x0000000000800060        0x0 ./DIO_Prog.o
 .data          0x0000000000800060        0x0 ./Lib_Delay.o
 .data          0x0000000000800060        0x0 ./SSD_Prog.o
 .data          0x0000000000800060        0x0 ./SWI_Prog.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_umulhisi3.o)
 *(.data*)
 .data.SSD_Au8SEG_PATTERN_CATHODE
                0x0000000000800060       0x46 ./SSD_Prog.o
                0x0000000000800060                SSD_Au8SEG_PATTERN_CATHODE
 .data.SSD_Au8SEG_PATTERN_ANODE
                0x00000000008000a6       0x46 ./SSD_Prog.o
                0x00000000008000a6                SSD_Au8SEG_PATTERN_ANODE
 .data.SSD_Au8Segments
                0x00000000008000ec        0xe ./SSD_Prog.o
                0x00000000008000ec                SSD_Au8Segments
 .data.SSD_Au8ModuleEnable
                0x00000000008000fa        0x2 ./SSD_Prog.o
                0x00000000008000fa                SSD_Au8ModuleEnable
 .data.SSD_Au8ModuleInitValue
                0x00000000008000fc        0x2 ./SSD_Prog.o
                0x00000000008000fc                SSD_Au8ModuleInitValue
 .data.SWI_Au8SwConnection
                0x00000000008000fe        0x2 ./SWI_Prog.o
                0x00000000008000fe                SWI_Au8SwConnection
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 .rodata.shiftedNumber
                0x0000000000800100        0x8 ./DIO_Prog.o
 .rodata.shiftedNumber
                0x0000000000800108        0x8 ./SWI_Prog.o
 *(.gnu.linkonce.r*)
                0x0000000000800110                . = ALIGN (0x2)
                0x0000000000800110                _edata = .
                0x0000000000800110                PROVIDE (__data_end = .)

.bss            0x0000000000800110        0xa
                0x0000000000800110                PROVIDE (__bss_start = .)
 *(.bss)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o
 .bss           0x0000000000800110        0x0 ./DIO_Prog.o
 .bss           0x0000000000800110        0x0 ./Lib_Delay.o
 .bss           0x0000000000800110        0x0 ./SSD_Prog.o
 .bss           0x0000000000800110        0x0 ./SWI_Prog.o
 .bss           0x0000000000800110        0x0 ./main.o
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_umulhisi3.o)
 *(.bss*)
 .bss.SSD_Au8ModuleType
                0x0000000000800110        0x2 ./SSD_Prog.o
                0x0000000000800110                SSD_Au8ModuleType
 .bss.SSD_Au8INIT_FLAG
                0x0000000000800112        0x2 ./SSD_Prog.o
                0x0000000000800112                SSD_Au8INIT_FLAG
 .bss.SSD_u8LastDigit
                0x0000000000800114        0x2 ./SSD_Prog.o
                0x0000000000800114                SSD_u8LastDigit
 .bss.SSD_u8OffFlag
                0x0000000000800116        0x2 ./SSD_Prog.o
                0x0000000000800116                SSD_u8OffFlag
 .bss.SWI_Au8SwType
                0x0000000000800118        0x2 ./SWI_Prog.o
                0x0000000000800118                SWI_Au8SwType
 *(COMMON)
                0x000000000080011a                PROVIDE (__bss_end = .)
                0x0000000000000f70                __data_load_start = LOADADDR (.data)
                0x0000000000001020                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080011a        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x000000000080011a                _end = .
                [!provide]                        PROVIDE (__heap_start = .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x2658
 *(.stab)
 .stab          0x0000000000000000     0x11c4 ./DIO_Prog.o
 .stab          0x00000000000011c4      0x420 ./Lib_Delay.o
                                        0x4a4 (size before relaxing)
 .stab          0x00000000000015e4      0x834 ./SSD_Prog.o
                                        0x8f4 (size before relaxing)
 .stab          0x0000000000001e18      0x408 ./SWI_Prog.o
                                        0x4c8 (size before relaxing)
 .stab          0x0000000000002220      0x438 ./main.o
                                        0x4f8 (size before relaxing)

.stabstr        0x0000000000000000     0x105d
 *(.stabstr)
 .stabstr       0x0000000000000000     0x105d ./DIO_Prog.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./DIO_Prog.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 ./Lib_Delay.o
 .comment       0x0000000000000011       0x12 ./SSD_Prog.o
 .comment       0x0000000000000011       0x12 ./SWI_Prog.o
 .comment       0x0000000000000011       0x12 ./main.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x4e6
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x4e6 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o

.debug_abbrev   0x0000000000000000      0x4a3
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x4a3 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o

.debug_line     0x0000000000000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x196
 *(.debug_str)
 .debug_str     0x0000000000000000      0x196 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)
OUTPUT(Switch_driver.elf elf32-avr)
LOAD linker stubs
